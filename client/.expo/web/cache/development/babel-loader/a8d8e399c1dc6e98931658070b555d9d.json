{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport NativeModal from \"react-native-web/dist/exports/Modal\";\nexport default function Modal(props) {\n  if (props.show) {\n    return React.createElement(NativeModal, _extends({}, props, {\n      transparent: true,\n      visible: true\n    }), React.createElement(View, {\n      style: _objectSpread({\n        backgroundColor: props.backgroundColor\n      }, StyleSheet.absoluteFillObject)\n    }), props.children);\n  }\n\n  return null;\n}","map":{"version":3,"sources":["Modal.tsx"],"names":["props","backgroundColor","StyleSheet","absoluteFillObject"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;;;;AAcA,eAAe,SAAA,KAAA,CAAA,KAAA,EAA6B;AAC1C,MAAIA,KAAK,CAAT,IAAA,EAAgB;AACd,WACE,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAwB,MAAA,WAAW,EAAnC,IAAA;AAAoC,MAAA,OAAO,EAAA;AAA3C,KAAA,CAAA,EACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,MAAA,KAAK;AACHC,QAAAA,eAAe,EAAED,KAAK,CADjB;AAAF,SAEAE,UAAU,CAACC,kBAFX;AADP,KAAA,CADF,EAQGH,KAAK,CATV,QACE,CADF;AAYD;;AACD,SAAA,IAAA;AACD","sourcesContent":["import React, { ReactNode } from 'react';\nimport {\n  View,\n  StyleSheet,\n  Modal as NativeModal,\n  ModalProps,\n} from 'react-native';\n\ninterface Props extends ModalProps {\n  children: ReactNode;\n  show: boolean;\n  backgroundColor?: string;\n}\n\nexport default function Modal(props: Props) {\n  if (props.show) {\n    return (\n      <NativeModal {...props} transparent visible>\n        <View\n          style={{\n            backgroundColor: props.backgroundColor,\n            ...StyleSheet.absoluteFillObject,\n          }}\n        />\n\n        {props.children}\n      </NativeModal>\n    );\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}