{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { colors } from \"../colors\";\nimport Label from \"./Label\";\nimport Modal from \"./Modal\";\nexport default function Picker(props) {\n  var _props$items$filter$;\n\n  var _useState = useState(props.selectedValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showPicker = _useState4[0],\n      setShowPicker = _useState4[1];\n\n  var _useState5 = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      position = _useState6[0],\n      setPosition = _useState6[1];\n\n  var _useState7 = useState(new Animated.Value(0)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      animatedBottom = _useState8[0],\n      setAnimatedBottom = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      shouldAnimate = _useState10[0],\n      setShouldAnimate = _useState10[1];\n\n  var pickerRef = useRef();\n\n  var handlePress = function handlePress() {\n    var _pickerRef$current;\n\n    if (props.floatingLabel && shouldAnimate) Animated.timing(animatedBottom, {\n      toValue: position.height - 10,\n      useNativeDriver: false,\n      duration: 300\n    }).start(function () {\n      return setShouldAnimate(false);\n    });\n    if (!showPicker) (_pickerRef$current = pickerRef.current) === null || _pickerRef$current === void 0 ? void 0 : _pickerRef$current.measureInWindow(function (x, y, width, height) {\n      setPosition({\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    });\n    setShowPicker(!showPicker);\n  };\n\n  useEffect(function () {\n    if (props.floatingLabel && props.selectedValue) Animated.timing(animatedBottom, {\n      toValue: position.height - 10,\n      useNativeDriver: false,\n      duration: 300\n    }).start(function () {\n      return setShouldAnimate(false);\n    });\n  }, [shouldAnimate]);\n  return React.createElement(React.Fragment, null, props.label && !props.floatingLabel && React.createElement(Label, {\n    text: props.label,\n    textStyle: props.labelStyle,\n    style: props.labelWrapperStyle,\n    asterik: props.asterik,\n    asterikStyle: props.asterikStyle\n  }), React.createElement(Pressable, {\n    style: [styles.pickerButton, props.buttonStyle],\n    onPress: handlePress,\n    ref: pickerRef,\n    onLayout: function onLayout(_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      setPosition(_objectSpread(_objectSpread({}, position), {}, {\n        height: nativeEvent.layout.height\n      }));\n      setAnimatedBottom(new Animated.Value(nativeEvent.layout.height / 4));\n    }\n  }, props.floatingLabel && props.label && React.createElement(Label, {\n    text: props.label,\n    textStyle: props.labelStyle,\n    style: [props.labelWrapperStyle, {\n      position: 'absolute',\n      bottom: animatedBottom,\n      paddingHorizontal: 2,\n      backgroundColor: animatedBottom.interpolate({\n        inputRange: [0, position.height / 3, position.height / 2],\n        outputRange: ['transparent', 'transparent', colors.white]\n      })\n    }],\n    asterik: props.asterik,\n    asterikStyle: props.asterikStyle\n  }), React.createElement(Text, {\n    style: [{\n      maxWidth: '90%',\n      opacity: props.floatingLabel && shouldAnimate ? 0 : 1\n    }, props.selectedValueStyle],\n    numberOfLines: 1\n  }, ((_props$items$filter$ = props.items.filter(function (item) {\n    return item.value === props.selectedValue;\n  })[0]) === null || _props$items$filter$ === void 0 ? void 0 : _props$items$filter$.label) || props.placeholder || '--Pick a value--'), React.createElement(View, {\n    style: [styles.childIconWrapper, props.iconWrapperStyle]\n  }, props.pickerIcon || React.createElement(View, {\n    style: styles.pickerIcon\n  }))), React.createElement(Modal, {\n    show: showPicker\n  }, React.createElement(Pressable, {\n    style: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n      elevation: 3\n    }),\n    onPress: function onPress() {\n      return setShowPicker(false);\n    }\n  }, React.createElement(ScrollView, {\n    style: [styles.wrapper, {\n      width: position.width,\n      position: 'absolute',\n      top: position.y + position.height + 8,\n      left: position.x\n    }],\n    nestedScrollEnabled: true\n  }, props.items.map(function (item) {\n    return React.createElement(Pressable, {\n      key: item.value,\n      style: [styles.button, props.selectedValue === item.value ? {\n        backgroundColor: colors.blue\n      } : null],\n      onPress: function onPress() {\n        setSelectedValue(item.value);\n        setShowPicker(false);\n        props.onSelection(item);\n      }\n    }, React.createElement(Text, {\n      style: [props.itemLabelStyle, {\n        color: selectedValue === item.value ? colors.white : colors.text\n      }]\n    }, item.label));\n  })))));\n}\nvar styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: colors.white,\n    borderRadius: 4,\n    zIndex: 1,\n    maxHeight: 200,\n    flexGrow: 0,\n    borderWidth: 0.5,\n    borderColor: colors.lightBlue,\n    elevation: 4,\n    shadowColor: colors.lightgrey,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 1,\n    shadowRadius: 4\n  },\n  button: {\n    paddingVertical: 8,\n    paddingHorizontal: 16\n  },\n  pickerButton: {\n    borderRadius: 4,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 8,\n    marginBottom: 24,\n    height: 44,\n    backgroundColor: colors.white\n  },\n  childIconWrapper: {\n    backgroundColor: colors.white,\n    alignSelf: 'stretch',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    padding: 8,\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    marginRight: 8\n  },\n  pickerIcon: {\n    borderTopColor: colors.grey,\n    borderTopWidth: 10,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    borderLeftWidth: 9,\n    borderRightWidth: 9,\n    borderBottomWidth: 0,\n    borderRadius: 4\n  }\n});","map":{"version":3,"sources":["Picker.tsx"],"names":["useState","props","x","y","width","height","Animated","pickerRef","useRef","handlePress","toValue","position","useNativeDriver","duration","setShouldAnimate","setPosition","setShowPicker","useEffect","asterikStyle","styles","nativeEvent","setAnimatedBottom","bottom","paddingHorizontal","backgroundColor","inputRange","outputRange","colors","maxWidth","opacity","item","pickerIcon","showPicker","StyleSheet","elevation","top","left","blue","setSelectedValue","color","selectedValue","text","wrapper","borderRadius","zIndex","maxHeight","flexGrow","borderWidth","borderColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","button","paddingVertical","pickerButton","flexDirection","alignItems","justifyContent","paddingLeft","marginBottom","white","childIconWrapper","alignSelf","padding","borderTopRightRadius","borderBottomRightRadius","marginRight","borderTopColor","borderTopWidth","borderLeftColor","borderRightColor","borderLeftWidth","borderRightWidth","borderBottomWidth"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  ReactText,\n  ReactNode,\n  RefObject,\n  useRef,\n  useEffect,\n} from 'react';\nimport {\n  View,\n  StyleSheet,\n  Pressable,\n  ScrollView,\n  Text,\n  Animated,\n} from 'react-native';\n\nimport { colors } from '../colors';\nimport Label from './Label';\nimport Modal from './Modal';\n\ninterface Item {\n  label: string;\n  value: ReactText;\n}\n\ninterface Props {\n  items: Array<Item>;\n  onSelection: (item: Item) => void;\n  selectedValue: ReactText;\n  pickerIcon?: ReactNode;\n  iconWrapperStyle?: object | object[];\n  asterik?: boolean;\n  labelStyle?: object | object[];\n  asterikStyle?: object | object[];\n  label?: ReactText;\n  labelWrapperStyle?: object | object[];\n  placeholder?: string;\n  selectedValueStyle?: object | object[];\n  buttonStyle?: object | object[];\n  itemLabelStyle?: object | object[];\n  floatingLabel?: boolean;\n}\n\nexport default function Picker(props: Props) {\n  const [selectedValue, setSelectedValue] = useState(props.selectedValue);\n  const [showPicker, setShowPicker] = useState(false);\n  const [position, setPosition] = useState({ x: 0, y: 0, width: 0, height: 0 });\n  const [animatedBottom, setAnimatedBottom] = useState(new Animated.Value(0));\n  const [shouldAnimate, setShouldAnimate] = useState(true);\n\n  const pickerRef: RefObject<View> = useRef() as RefObject<View>;\n\n  const handlePress = () => {\n    if (props.floatingLabel && shouldAnimate)\n      Animated.timing(animatedBottom, {\n        toValue: position.height - 10,\n        useNativeDriver: false,\n        duration: 300,\n      }).start(() => setShouldAnimate(false));\n\n    if (!showPicker)\n      pickerRef.current?.measureInWindow(\n        (x: number, y: number, width: number, height: number) => {\n          setPosition({ x, y, width, height });\n        }\n      );\n    setShowPicker(!showPicker);\n  };\n\n  useEffect(() => {\n    if (props.floatingLabel && props.selectedValue)\n      Animated.timing(animatedBottom, {\n        toValue: position.height - 10,\n        useNativeDriver: false,\n        duration: 300,\n      }).start(() => setShouldAnimate(false));\n  }, [shouldAnimate]);\n\n  return (\n    <>\n      {props.label && !props.floatingLabel && (\n        <Label\n          text={props.label}\n          textStyle={props.labelStyle}\n          style={props.labelWrapperStyle}\n          asterik={props.asterik}\n          asterikStyle={props.asterikStyle}\n        />\n      )}\n      <Pressable\n        style={[styles.pickerButton, props.buttonStyle]}\n        onPress={handlePress}\n        ref={pickerRef}\n        onLayout={({ nativeEvent }) => {\n          setPosition({ ...position, height: nativeEvent.layout.height });\n          setAnimatedBottom(new Animated.Value(nativeEvent.layout.height / 4));\n        }}\n      >\n        {props.floatingLabel && props.label && (\n          <Label\n            text={props.label}\n            textStyle={props.labelStyle}\n            style={[\n              props.labelWrapperStyle,\n              {\n                position: 'absolute',\n                bottom: animatedBottom,\n                paddingHorizontal: 2,\n                backgroundColor: animatedBottom.interpolate({\n                  inputRange: [0, position.height / 3, position.height / 2],\n                  outputRange: ['transparent', 'transparent', colors.white],\n                }),\n              },\n            ]}\n            asterik={props.asterik}\n            asterikStyle={props.asterikStyle}\n          />\n        )}\n\n        <Text\n          style={[\n            {\n              maxWidth: '90%',\n              opacity: props.floatingLabel && shouldAnimate ? 0 : 1,\n            },\n            props.selectedValueStyle,\n          ]}\n          numberOfLines={1}\n        >\n          {props.items.filter((item) => item.value === props.selectedValue)[0]\n            ?.label ||\n            props.placeholder ||\n            '--Pick a value--'}\n        </Text>\n\n        <View style={[styles.childIconWrapper, props.iconWrapperStyle]}>\n          {props.pickerIcon || <View style={styles.pickerIcon} />}\n        </View>\n      </Pressable>\n\n      <Modal show={showPicker}>\n        <Pressable\n          style={{ ...StyleSheet.absoluteFillObject, elevation: 3 }}\n          onPress={() => setShowPicker(false)}\n        >\n          <ScrollView\n            style={[\n              styles.wrapper,\n              {\n                width: position.width,\n                position: 'absolute',\n                top: position.y + position.height + 8,\n                left: position.x,\n              },\n            ]}\n            nestedScrollEnabled\n          >\n            {props.items.map((item) => (\n              <Pressable\n                key={item.value}\n                style={[\n                  styles.button,\n                  props.selectedValue === item.value\n                    ? { backgroundColor: colors.blue }\n                    : null,\n                ]}\n                onPress={() => {\n                  setSelectedValue(item.value);\n                  setShowPicker(false);\n                  props.onSelection(item);\n                }}\n              >\n                <Text\n                  style={[\n                    props.itemLabelStyle,\n                    {\n                      color:\n                        selectedValue === item.value\n                          ? colors.white\n                          : colors.text,\n                    },\n                  ]}\n                >\n                  {item.label}\n                </Text>\n              </Pressable>\n            ))}\n          </ScrollView>\n        </Pressable>\n      </Modal>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: colors.white,\n    borderRadius: 4,\n    zIndex: 1,\n    maxHeight: 200,\n    flexGrow: 0,\n    borderWidth: 0.5,\n    borderColor: colors.lightBlue,\n    elevation: 4,\n    shadowColor: colors.lightgrey,\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 1,\n    shadowRadius: 4,\n  },\n  button: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  pickerButton: {\n    borderRadius: 4,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 8,\n    marginBottom: 24,\n    height: 44,\n    backgroundColor: colors.white,\n  },\n  childIconWrapper: {\n    backgroundColor: colors.white,\n    alignSelf: 'stretch',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    padding: 8,\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    marginRight: 8,\n  },\n  pickerIcon: {\n    borderTopColor: colors.grey,\n    borderTopWidth: 10,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    borderLeftWidth: 9,\n    borderRightWidth: 9,\n    borderBottomWidth: 0,\n    borderRadius: 4,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}