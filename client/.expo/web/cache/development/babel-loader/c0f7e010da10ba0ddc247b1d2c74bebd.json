{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar baseUrl = 'http://localhost:4000';\nexport var login = function login(email, password) {\n  var response;\n  return _regeneratorRuntime.async(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(baseUrl + \"/login\", {\n            email: email,\n            password: password\n          }));\n\n        case 3:\n          response = _context.sent;\n\n          if (!(response.status === 200)) {\n            _context.next = 10;\n            break;\n          }\n\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('userID', response.data.token));\n\n        case 7:\n          return _context.abrupt(\"return\", true);\n\n        case 10:\n          return _context.abrupt(\"return\", false);\n\n        case 11:\n          _context.next = 16;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", false);\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 13]], Promise);\n};\nexport var register = function register(email, password, name) {\n  return axios.post(\"/register\", {\n    email: email,\n    password: password,\n    name: name\n  });\n};\nexport var logoutUser = function logoutUser() {\n  removeValue('userID');\n};\n\nvar removeValue = function removeValue(key) {\n  return _regeneratorRuntime.async(function removeValue$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(key));\n\n        case 3:\n          _context2.next = 7;\n          break;\n\n        case 5:\n          _context2.prev = 5;\n          _context2.t0 = _context2[\"catch\"](0);\n\n        case 7:\n          console.log('Done.');\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nexport var getUserId = function getUserId() {\n  return _regeneratorRuntime.async(function getUserId$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('userID'));\n\n        case 3:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n\n        case 8:\n          console.log('Done.');\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};","map":{"version":3,"sources":["/home/billf/YHelpUs/client/services/Auth.tsx"],"names":["axios","AsyncStorage","baseUrl","login","email","password","post","response","status","setItem","data","token","register","name","logoutUser","removeValue","key","removeItem","console","log","getUserId","getItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,IAAMC,OAAO,GAAG,uBAAhB;AAGA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAOC,KAAP,EAAsBC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEML,KAAK,CAACM,IAAN,CAAcJ,OAAd,aAA+B;AACpDE,YAAAA,KAAK,EAALA,KADoD;AAEpDC,YAAAA,QAAQ,EAARA;AAFoD,WAA/B,CAFN;;AAAA;AAEXE,UAAAA,QAFW;;AAAA,gBAMdA,QAAQ,CAACC,MAAT,KAAoB,GANN;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAOTP,YAAY,CAACQ,OAAb,CAAqB,QAArB,EAA+BF,QAAQ,CAACG,IAAT,CAAcC,KAA7C,CAPS;;AAAA;AAAA,2CAQR,IARQ;;AAAA;AAAA,2CAUR,KAVQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,2CAcV,KAdU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;AAmBP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACR,KAAD,EAAgBC,QAAhB,EAAkCQ,IAAlC,EAAmD;AACzE,SAAOb,KAAK,CAACM,IAAN,CAAW,WAAX,EAAwB;AAC7BF,IAAAA,KAAK,EAALA,KAD6B;AAE7BC,IAAAA,QAAQ,EAARA,QAF6B;AAG7BQ,IAAAA,IAAI,EAAJA;AAH6B,GAAxB,CAAP;AAKD,CANM;AAQP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9BC,EAAAA,WAAW,CAAC,QAAD,CAAX;AACD,CAFM;;AAIP,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEVf,YAAY,CAACgB,UAAb,CAAwBD,GAAxB,CAFU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAOlBE,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAPkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAUA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAERnB,YAAY,CAACoB,OAAb,CAAqB,QAArB,CAFQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAOvBH,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAPuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB","sourcesContent":["import axios from \"axios\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nconst baseUrl = 'http://localhost:4000';\r\n\r\n\r\nexport const login = async (email: string, password:string)=>{\r\n  try {\r\n    const response = await axios.post(`${baseUrl}/login`, {\r\n      email,\r\n      password\r\n    });\r\n    if(response.status === 200){\r\n      await AsyncStorage.setItem('userID', response.data.token);\r\n      return true;\r\n    }else{\r\n      return false;\r\n    }\r\n  } catch (e) {\r\n    // error\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\nexport const register = (email: string, password: string, name: string) => {\r\n  return axios.post(\"/register\", {\r\n    email,\r\n    password,\r\n    name\r\n  });\r\n};\r\n\r\nexport const logoutUser = () => {\r\n  removeValue('userID');\r\n}\r\n\r\nconst removeValue = async (key:string) => {\r\n  try {\r\n    await AsyncStorage.removeItem(key)\r\n  } catch(e) {\r\n    // remove error\r\n  }\r\n\r\n  console.log('Done.')\r\n}\r\n\r\nexport const getUserId = async () => {\r\n  try {\r\n    return await AsyncStorage.getItem('userID')\r\n  } catch(e) {\r\n    // read error\r\n  }\r\n\r\n  console.log('Done.')\r\n}"]},"metadata":{},"sourceType":"module"}