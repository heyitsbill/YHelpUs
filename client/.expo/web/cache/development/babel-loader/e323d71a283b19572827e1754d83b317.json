{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Form, FormItem, Picker } from 'react-native-form-component';\nimport { useState } from 'react';\nimport { createPost } from \"../services\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AddPostScreen = function AddPostScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      postTitle = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postBody = _useState4[0],\n      setBody = _useState4[1];\n\n  var _useState5 = useState('0'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      price = _useState6[0],\n      setPrice = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      days = _useState8[0],\n      setDays = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      hours = _useState10[0],\n      setHours = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      multipleDays = _useState12[0],\n      setMultipleDays = _useState12[1];\n\n  var _useState13 = useState(4),\n      _useState14 = _slicedToArray(_useState13, 2),\n      duration = _useState14[0],\n      setDuration = _useState14[1];\n\n  var _useState15 = useState({\n    title: '',\n    description: '',\n    price: 0,\n    authorID: '62512b73d01b9a08a09b351c',\n    time: new Date(),\n    status: 'active',\n    length: \"0-10 min\"\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      currPost = _useState16[0],\n      setPost = _useState16[1];\n\n  var validateNumber = function validateNumber(value) {\n    var number = value.substring(2);\n\n    if (!isNaN(number)) {\n      if (number.length > 1 && number.charAt(0) === '0') {\n        setPrice(number.substring(1));\n        currPost.price = parseInt(number.substring(1));\n      } else if (number.length == 0) {\n        setPrice('0');\n        currPost.price = 0;\n      } else {\n        setPrice(number);\n        currPost.price = parseInt(number);\n      }\n    }\n  };\n\n  var validateDays = function validateDays(value) {\n    setDays(value);\n  };\n\n  var validateHours = function validateHours(value) {\n    setHours(value);\n  };\n\n  var validateMultipleDays = function validateMultipleDays(value) {\n    setMultipleDays(value);\n  };\n\n  var validateDuration = function validateDuration(value) {\n    currPost.length = durations[value].label;\n    setDuration(value);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var ourHours, deadline, finDL, newPost;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"called\");\n\n            if (!(days !== 0 || hours !== 0)) {\n              _context.next = 12;\n              break;\n            }\n\n            console.log(\"now here\");\n            ourHours = 0;\n\n            if (multipleDays) {\n              ourHours = days * 24;\n            } else {\n              ourHours = hours;\n            }\n\n            deadline = new Date();\n            finDL = addHours(deadline, ourHours);\n            currPost.time = finDL;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(createPost(currPost));\n\n          case 10:\n            newPost = _context.sent;\n            console.log(\"new post: \" + newPost.data);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function addHours(date, funHours) {\n    var newDate = new Date(date);\n    newDate.setHours(newDate.getHours() + funHours);\n    return newDate;\n  }\n\n  var durations = [{\n    label: '0-10 min',\n    value: 0\n  }, {\n    label: '10-30 min',\n    value: 1\n  }, {\n    label: '30-60 min',\n    value: 2\n  }, {\n    label: '60+ min',\n    value: 3\n  }, {\n    label: 'N/A',\n    value: 4\n  }];\n  return _jsxs(Form, {\n    onButtonPress: handleSubmit,\n    children: [_jsx(FormItem, {\n      label: \"Title\",\n      autoCorrect: false,\n      spellCheck: false,\n      maxLength: 64,\n      autoCapitalize: \"none\",\n      isRequired: true,\n      value: postTitle,\n      onChangeText: function onChangeText(temp) {\n        setPost(function (currPost) {\n          return _objectSpread(_objectSpread({}, currPost), {}, {\n            title: temp\n          });\n        });\n        setTitle(temp);\n      },\n      asterik: true\n    }), _jsx(FormItem, {\n      label: \"Description\",\n      autoCorrect: false,\n      spellCheck: false,\n      maxLength: 240,\n      autoCapitalize: \"none\",\n      multiline: true,\n      isRequired: true,\n      value: postBody,\n      onChangeText: function onChangeText(temp) {\n        setPost(function (currPost) {\n          return _objectSpread(_objectSpread({}, currPost), {}, {\n            description: temp\n          });\n        });\n        setBody(temp);\n      },\n      asterik: true\n    }), _jsx(FormItem, {\n      label: \"How much are you willing to pay?\",\n      isRequired: true,\n      value: \"$ \" + price,\n      onChangeText: function onChangeText(temp) {\n        validateNumber(temp);\n        setPost(function (currPost) {\n          return _objectSpread(_objectSpread({}, currPost), {}, {\n            price: parseInt(temp)\n          });\n        });\n      },\n      asterik: true\n    }), _jsx(Picker, {\n      label: \"Will this posting last multiple days?\",\n      items: [{\n        label: 'No',\n        value: 0\n      }, {\n        label: 'Yes',\n        value: 1\n      }],\n      placeholder: \"Select number of days\",\n      selectedValue: multipleDays,\n      onSelection: function onSelection(item) {\n        return validateMultipleDays(item.value);\n      }\n    }), multipleDays === 1 ? _jsx(Picker, {\n      label: \"How many days will this posting last?\",\n      items: [{\n        label: '0 Days',\n        value: 0\n      }, {\n        label: '1 Day',\n        value: 1\n      }, {\n        label: '2 Days',\n        value: 2\n      }, {\n        label: '3 Days',\n        value: 3\n      }],\n      placeholder: \"Select number of days\",\n      selectedValue: days,\n      onSelection: function onSelection(item) {\n        return validateDays(item.value);\n      }\n    }) : _jsx(Picker, {\n      label: \"How many hours will this posting last?\",\n      items: [{\n        label: '0 Hours',\n        value: 0\n      }, {\n        label: '2 Hours',\n        value: 2\n      }, {\n        label: '4 Hours',\n        value: 4\n      }, {\n        label: '6 Hours',\n        value: 6\n      }, {\n        label: '8 Hours',\n        value: 8\n      }],\n      placeholder: \"Select number of hours\",\n      selectedValue: hours,\n      onSelection: function onSelection(item) {\n        return validateHours(item.value);\n      }\n    }), _jsx(Picker, {\n      label: \"How long do you expect this to take?\",\n      items: [{\n        label: '0-10 min',\n        value: 0\n      }, {\n        label: '10-30 min',\n        value: 1\n      }, {\n        label: '30-60 min',\n        value: 2\n      }, {\n        label: '60+ min',\n        value: 3\n      }, {\n        label: 'N/A',\n        value: 4\n      }],\n      placeholder: \"Select time duration\",\n      selectedValue: duration,\n      onSelection: function onSelection(item) {\n        return validateDuration(item.value);\n      }\n    })]\n  });\n};\n\nexport default AddPostScreen;","map":{"version":3,"sources":["/home/billf/YHelpUs/client/screens/AddPostScreen.tsx"],"names":["Form","FormItem","Picker","useState","createPost","AddPostScreen","props","postTitle","setTitle","postBody","setBody","price","setPrice","days","setDays","hours","setHours","multipleDays","setMultipleDays","duration","setDuration","title","description","authorID","time","Date","status","length","currPost","setPost","validateNumber","value","number","substring","isNaN","charAt","parseInt","validateDays","validateHours","validateMultipleDays","validateDuration","durations","label","handleSubmit","console","log","ourHours","deadline","finDL","addHours","newPost","data","date","funHours","newDate","getHours","temp","item"],"mappings":"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","sourcesContent":["import { Form, FormItem, Picker } from 'react-native-form-component';\nimport { useState } from 'react';\nimport { IPost } from '@backend/src/types';\nimport { createPost } from '../services';\n\ninterface AddPostProps {\n    userID: string;\n}\n\nconst AddPostScreen = (props: AddPostProps) => {\n    const [postTitle, setTitle] = useState('');\n    const [postBody, setBody] = useState('');\n    const [price, setPrice] = useState('0');\n    const [days, setDays] = useState(0);\n    const [hours, setHours] = useState(0);\n    const [multipleDays, setMultipleDays] = useState(0);\n    const [duration, setDuration] = useState(4);\n\n\n    const [currPost, setPost] = useState<IPost>({\n        title: '',\n        description: '',\n        price: 0,\n        authorID: '62512b73d01b9a08a09b351c',\n        time: new Date(),\n        status: 'active',\n        length: \"0-10 min\"\n    });\n\n\n    const validateNumber = (value: any) => {\n        const number = value.substring(2);\n        if(!isNaN(number)) {\n            if (number.length > 1 && number.charAt(0) === '0') {\n                setPrice(number.substring(1));\n                currPost.price = parseInt(number.substring(1));\n            } else if (number.length == 0) {\n                setPrice('0');\n                currPost.price = 0;\n            } else {\n                setPrice(number);\n                currPost.price = parseInt(number);\n            }\n        }\n    }\n    \n    const validateDays = (value: any) => {\n        setDays(value);\n    }\n\n    const validateHours = (value: any) => {\n        setHours(value);\n    }\n\n    const validateMultipleDays = (value: any) => {\n        setMultipleDays(value);\n    }\n\n    const validateDuration = (value: any) => {\n        currPost.length = durations[value].label;\n        setDuration(value);\n    }\n\n    const handleSubmit = async () => {\n        console.log(\"called\")\n        if(days !== 0 || hours !== 0){\n            console.log(\"now here\")\n            let ourHours = 0;\n            if(multipleDays){\n                ourHours = days * 24\n            } else {\n                ourHours = hours\n            }\n            const deadline = new Date();\n            const finDL = addHours(deadline, ourHours);\n            currPost.time = finDL;\n\n            const newPost = await createPost(currPost);\n            console.log(`new post: ${newPost.data}`);\n\n        }\n    }\n\n    function addHours(date: any, funHours: any) {\n        const newDate = new Date(date);\n        newDate.setHours(newDate.getHours() + funHours);\n        return newDate;\n      }\n\n    const durations = [\n        { label: '0-10 min', value: 0 },\n        { label: '10-30 min', value: 1 },\n        { label: '30-60 min', value: 2 },\n        { label: '60+ min', value: 3 },\n        { label: 'N/A', value: 4 },\n    ]\n\n\nreturn (\n    <Form onButtonPress={handleSubmit}>\n      <FormItem\n        label=\"Title\"\n        autoCorrect={false}\n        spellCheck={false}\n        maxLength={64}\n        autoCapitalize='none'\n        isRequired\n        value={postTitle}\n        onChangeText={(temp) => {\n            setPost(currPost => ({...currPost, title: temp}));\n            setTitle(temp)}}\n\n        asterik\n    />\n    <FormItem\n        label=\"Description\"\n        autoCorrect={false}\n        spellCheck={false}\n        maxLength={240}\n        autoCapitalize='none'\n        multiline\n        isRequired\n        value={postBody}\n        onChangeText={(temp) =>{\n            setPost(currPost => ({...currPost, description: temp}));\n            setBody(temp)}\n        }\n        asterik\n    />\n    <FormItem\n        label=\"How much are you willing to pay?\"\n        isRequired\n        value={`$ ${price}`}\n        onChangeText={(temp) => {\n            validateNumber(temp);\n            setPost(currPost => ({...currPost, price: parseInt(temp)}));\n        }}\n        asterik\n    />\n    <Picker\n        label=\"Will this posting last multiple days?\"\n        items={[\n            { label: 'No', value: 0 },\n            { label: 'Yes', value: 1 },\n        ]} \n        placeholder=\"Select number of days\"\n        selectedValue={multipleDays}\n        onSelection={(item) => validateMultipleDays(item.value)}\n    />\n    {multipleDays === 1 ?\n    <Picker\n        label=\"How many days will this posting last?\"\n        items={[\n            { label: '0 Days', value: 0 },\n            { label: '1 Day', value: 1 },\n            { label: '2 Days', value: 2 },\n            { label: '3 Days', value: 3 },\n        ]} \n        placeholder=\"Select number of days\"\n        selectedValue={days}\n        onSelection={(item) => validateDays(item.value)}\n    /> : <Picker\n        label=\"How many hours will this posting last?\"\n        items={[\n            { label: '0 Hours', value: 0 },\n            { label: '2 Hours', value: 2 },\n            { label: '4 Hours', value: 4 },\n            { label: '6 Hours', value: 6 },\n            { label: '8 Hours', value: 8 },\n        ]} \n        placeholder=\"Select number of hours\"\n        selectedValue={hours}\n        onSelection={(item) => validateHours(item.value)}\n    />}\n    <Picker\n        label=\"How long do you expect this to take?\"\n        items={[\n            { label: '0-10 min', value: 0 },\n            { label: '10-30 min', value: 1 },\n            { label: '30-60 min', value: 2 },\n            { label: '60+ min', value: 3 },\n            { label: 'N/A', value: 4 },\n        ]} \n        placeholder=\"Select time duration\"\n        selectedValue={duration}\n        onSelection={(item) => validateDuration(item.value)}\n    />\n    \n    \n    </Form>\n  );\n}\n\nexport default AddPostScreen;"]},"metadata":{},"sourceType":"module"}